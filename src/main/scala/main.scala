import mte._
import scala.language.postfixOps
import scala.annotation.unused

@main
def main(): Unit = {
  구구단2()
  팩토리얼()

  val vd: TestValidator = TestValidator()
  vd.validate(test1)
  vd.validate(test2)
  vd.validate(test3)
  vd.validate(test4)
}

def 포인터실험(): Unit = {
  춘잣! {
    아니세상에 자기가 "케인" 이라는사람인데 -3000 를 했대
  } 케바바바밥줘 {
    아니세상에 자기가 "노인1" 이라는사람인데 {
      아~! "케인"은 (아니세상에 자기가 "케인" 이라는사람인데 4000 를 했대)가 참 좋구나~!
    } 를 했대 케바바바밥줘 "노인1"아 "케인" 먹어라??
  } 케바바바밥줘 {
    "케인" 리액션 "%s\n" // "케인"에 든 값인 -3000은 바뀌지 않음
  } 케바바바밥줘 {
    아니세상에 자기가 "노인2" 이라는사람인데 {
      아~! "니"는 ("니"게 그런 사람이 4000 힐 순없는지)가 참 좋구나~!
    } 를 했대 케바바바밥줘 "노인2"야 ("케인" 발행 NFT) 먹어라??
  } 케바바바밥줘 {
    "케인" 리액션 "%s\n" // "케인"에 든 값인 -3000이 4000으로 바뀜
  }
}

def ㄴ찍기(): Unit = {
  춘잣! {
    아니세상에 자기가 "케인" 이라는사람인데 개입 을 했대
  } 케바바바밥줘 {
    ("케인" 조이고 4수) {
      ("케인"수) {
        리액션 (스키비야, "@")
      } 리액션 "\n"
    }
  } 케바바바밥줘 {
    ("케인"수) {
      ("케인" 조이고 5수) {
        리액션 (스키비야, "@")
      } 리액션 "\n"
    }
  }
}

def test3(): Unit = {
  춘잣! {
    아니세상에 자기가 "함수" 라는사람인데 {
      "x" +++ "y" +++ "z"는 ("x" 배 "y" 코 "z")다 게이조이고
    } 를 했대
  } 케바바바밥줘 {
    정품 맞어 {
      "함수"야 묶음!!(1, 2, 3) 먹어라?? 꼽표~~
    }
  }
}

def test2(): Unit = {
  춘잣! {
    아니세상에 자기가 "함수" 라는사람인데 {
      "변수"는 ("변수" 배 뭉탱뭉)이다 게이조이고
    } 를 했대
  } 케바바바밥줘 {
    "함수"야 뭉탱뭉 먹어라??
  }
}

def 팩토리얼(): Unit = {
  춘잣! {
    아~! ("팩토리얼", "x")는 {
      (유링게슝한?) ("x" 돈 탱 원에??) {
        "팩토리얼"아 ("x" 코 뭉) 먹어라?? 조이고 "x"
      } 안유링게슝 {
        뭉
      }
    } 가 참 좋구나~!
  } 케바바바밥줘 {
    (11수) ("영양제") {
      "팩토리얼"아 "영양제" 먹어라?? 리액션 "%s\n"
    }
  }
}

def 구구단(): Unit = {
  춘잣! {
    (11수) ("i") {
      (11수) ("j") {
        "i" 조이고 "j" 리액션 "%s\t"
      } 리액션 "\n"
    }
  }
}

def 구구단2(): Unit = {
  춘잣! {
    (1 달려가 10) ("i") {
      (1 달려가 10) ("j") {
        "i" 조이고 "j" 리액션 "%s\t"
      } 리액션 "\n"
    }
  }
}

def test1(): Unit = {
  춘잣! {
    정품 맞어 {
      주제넘은? {
        뭉 아 뭉탱 먹어라??
      } 꼽표~~
    }
  }
}

def test4(): Unit = {
  춘잣! {
    뭉탱이(0, 1, 2, 3, 4) 갖고와 임마!! 3 배 7 리액션 "%s\n"
  } 케바바바밥줘 {
    뭉탱이(0, 1, 2, 3) 조이는 뭉탱이(4, 5, 6, 7) 리액션 "%s\n"
  }
}

class TestValidator(var n: Int = 1) {
  def validate(f: () => Unit): Unit = {
    f()
    println("test %d validated".format(n))
    n += 1
  }
}